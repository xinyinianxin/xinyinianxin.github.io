<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>少女乐园</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-12-09T06:12:56.574Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>你呀</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>甘特图</title>
    <link href="http://example.com/2021/11/02/%E7%94%98%E7%89%B9%E5%9B%BE/"/>
    <id>http://example.com/2021/11/02/%E7%94%98%E7%89%B9%E5%9B%BE/</id>
    <published>2021-11-02T10:00:29.000Z</published>
    <updated>2021-12-09T06:12:56.574Z</updated>
    
    <content type="html"><![CDATA[<p>最近需要开发一个新需求，看到原型图以后，要是开发完这个需求，我就自封高级前端工程师😏</p><p><img src="1.png"></p><p>然后开始在百度疯狂扒拉甘特图的插件，刚开始用的是dhtmlxGantt这个插件 ，在写到一半的时候发现并不能满足原型图需求（原型图的头部时间需要选择时间段，但是这个插件默认显示一个月，没有找到改变头部时间的方法）就换了 **<a href="https://gitee.com/friends/wl-gantt">wl-gantt</a>**这个插件，可以去git看源码以及文档说明。</p><p>这是wl-gantt的示例图：</p><p><img src="2.png"></p><p>与原型还是有一些差距的，下面是根据原型图需求进行的修改</p><p>1.<img src="3.png"></p><p>原型图需求是默认显示当前月日期，并且支持时间选择器进行搜索，最大三个月，这就需要我们去改wl-gantt源码</p><p><img src="4.png"></p><p><img src="5.png"></p><p><img src="6.png"></p><p><img src="7.png"></p><p>2.关于wl-gantt使用过程中遇到的坑：</p><p>当写完整个页面时发现没有问题，但是当你打开f12看network时就会发现问题来了，页面刚刷新的时候，network没有执行任何函数，也就是说created函数没有执行，这带来了很大的麻烦，因为初始化的时候要执行很多操作，所以就把初始化的操作用watch监听和actived函数结合来使用，虽然效果可以实现，但是代码很冗余。</p><p>后来一直在扒拉源码发现了问题所在</p><p><img src="8.png"></p><p>就是这一句代码！</p><p>以上是关于甘特图需求遇到的问题，如果有不对的地方欢迎指正，过程中有不清楚的问题欢迎随时评论😇</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近需要开发一个新需求，看到原型图以后，要是开发完这个需求，我就自封高级前端工程师😏&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;1.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;然后开始在百度疯狂扒拉甘特图的插件，刚开始用的是dhtmlxGantt这个插件 ，在写到一半的时候发现并不能满足原型图需求</summary>
      
    
    
    
    
    <category term="甘特图插件应用" scheme="http://example.com/tags/%E7%94%98%E7%89%B9%E5%9B%BE%E6%8F%92%E4%BB%B6%E5%BA%94%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>ec-canvas</title>
    <link href="http://example.com/2021/10/26/ec-canvas/"/>
    <id>http://example.com/2021/10/26/ec-canvas/</id>
    <published>2021-10-26T05:22:50.000Z</published>
    <updated>2021-11-02T02:20:43.309Z</updated>
    
    <content type="html"><![CDATA[<h4 id="小程序ec-canvas应用"><a href="#小程序ec-canvas应用" class="headerlink" title="小程序ec-canvas应用"></a>小程序ec-canvas应用</h4><p>今天分享一下这两天在项目过程中ec-canvas踩过的坑，差点被echarse搞死😭。</p><p>先来说一下需求：</p><p><img src="1.png"></p><p>原型图来看只是一个展示效果 但其实坑在后面！</p><h6 id="首先，下载echarts微信版-地址：https-github-com-ecomfe-echarts-for-weixin"><a href="#首先，下载echarts微信版-地址：https-github-com-ecomfe-echarts-for-weixin" class="headerlink" title="首先，下载echarts微信版 地址：https://github.com/ecomfe/echarts-for-weixin"></a>首先，下载echarts微信版 地址：<a href="https://github.com/ecomfe/echarts-for-weixin">https://github.com/ecomfe/echarts-for-weixin</a></h6><p>下载打开后 如图所示</p><p><img src="2.png"></p><p>将下载好的文件中ec-canvas目录 放在小程序项目目录中即可 如下图所示</p><p><img src="3.png"></p><p>然后在需要的地方引入即可</p><p>1.在页面开启使用echarse</p><p>如：在page目录的FinanceAll页面中使用echarse的话，需要在相应的json中添加以下配置。</p><p><img src="4.png"></p><p>2.在FinanceAll.js中引入echarse.js</p><p>import * as echarts from ‘../../ec-canvas/echarts’</p><p>3.在FinanceAll.wxml中建立一个元素 （<u><strong>外层一定要用一个view包裹 重新设置样式，否则ec-canvas组件的原样式设置的是占了整个屏幕，而ec-canvas的层级是最高的，这会导致整个页面的所有点击事件失效！！！！</strong></u>）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;view class=&quot;echarts-box&quot;&gt;</span><br><span class="line">    &lt;cover-view class=&quot;echarts-container&quot;&gt;</span><br><span class="line">        &lt;ec-canvas id=&quot;mychart-dom-line&quot; canvas-id=&quot;mychart-line&quot; force-use-old-canvas=&quot;true&quot; ec=&quot;&#123;&#123; ec &#125;&#125;&quot;&gt;&lt;/ec-canvas&gt;</span><br><span class="line">    &lt;/cover-view&gt;</span><br><span class="line">&lt;/view&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>样式设置如下 仅供参考 可根据个人项目样式进行设置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">.echarts-container&#123;</span><br><span class="line">    height: 50%;</span><br><span class="line">    position: absolute;</span><br><span class="line">    left: 0;</span><br><span class="line">    right: 0;</span><br><span class="line">    display: flex;</span><br><span class="line">    flex-direction: column;</span><br><span class="line">    align-items: center;</span><br><span class="line">    justify-content: space-between;</span><br><span class="line">    box-sizing: border-box;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>4.动态渲染数据</strong>（两个函数）</p><p><strong>初始化函数：</strong></p><p><img src="5.png"></p><p><img src="6.png"></p><p>记住要定义全局的chart!!!!!!</p><p><strong>获取数据：</strong></p><p><img src="7.png"></p><p><img src="8.png"></p><p>最后需要注意的是小程序ec-canvas暂时还不支持真机调试 需要加force-use-old-canvas=”true”属性实现真机调试嗷.</p><p>附加今日份小王的bug分享😑</p><p><img src="10.png"></p><p><img src="9.jpg"></p><p>效果图如上：我的解决办法是时间选择器弹出的时候隐藏echarse图表，就在这里遇到了问题😶</p><p>就是在时间选择器展示的时候echarse图表取反展示，下图是我的写法，但是错误的！</p><p><img src="11.png"></p><p>后来尝试了很多方法，终于解决了👋</p><p><img src="12.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;小程序ec-canvas应用&quot;&gt;&lt;a href=&quot;#小程序ec-canvas应用&quot; class=&quot;headerlink&quot; title=&quot;小程序ec-canvas应用&quot;&gt;&lt;/a&gt;小程序ec-canvas应用&lt;/h4&gt;&lt;p&gt;今天分享一下这两天在项目过程中ec-canv</summary>
      
    
    
    
    
    <category term="ec-canvas 多条件取反" scheme="http://example.com/tags/ec-canvas-%E5%A4%9A%E6%9D%A1%E4%BB%B6%E5%8F%96%E5%8F%8D/"/>
    
  </entry>
  
  <entry>
    <title>小程序端数据渲染（子级数据向上取父级数据）</title>
    <link href="http://example.com/2021/10/19/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%AB%AF%E6%95%B0%E6%8D%AE%E6%B8%B2%E6%9F%93%EF%BC%88%E5%AD%90%E7%BA%A7%E6%95%B0%E6%8D%AE%E5%90%91%E4%B8%8A%E5%8F%96%E7%88%B6%E7%BA%A7%E6%95%B0%E6%8D%AE/"/>
    <id>http://example.com/2021/10/19/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%AB%AF%E6%95%B0%E6%8D%AE%E6%B8%B2%E6%9F%93%EF%BC%88%E5%AD%90%E7%BA%A7%E6%95%B0%E6%8D%AE%E5%90%91%E4%B8%8A%E5%8F%96%E7%88%B6%E7%BA%A7%E6%95%B0%E6%8D%AE/</id>
    <published>2021-10-19T09:12:43.000Z</published>
    <updated>2021-10-22T07:51:19.524Z</updated>
    
    <content type="html"><![CDATA[<p>在小程序开发过程中经常会遇到多级数据渲染，子父级数据嵌套问题，通常需要多层循环进行渲染数据，下面两张图说明一切👀</p><p><img src="%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20211022154440.png"></p><p><img src="%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20211022154504.png"></p><p><strong>总结：</strong>需要多级数据渲染的时候命名别名就ok啦</p><p><strong>分享JS基础：</strong></p><p>Javascript是一门<strong>面向对象</strong>的，<strong>跨平台</strong>的<strong>脚本</strong>语言</p><p><strong>变量</strong></p><p>声明：</p><p>变量命名见名知义，驼峰命名，不要跟关键字冲突</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var str =&#x27;hello&#x27;</span><br><span class="line">var userName = &#x27;zhangsan</span><br></pre></td></tr></table></figure><p>类型：</p><p>js本身是弱类型，但是计算机内部还是会区分每一种数据类型</p><p>五（六）种基本数据类型：number,string,boolean,undefined,null,(symbol)</p><p>两种引用类型：object,function</p><p>一个关键字typeof typeof返回值有六种：number,string,boolean,undefined,object,function</p><h4 id="Object-API"><a href="#Object-API" class="headerlink" title="Object API"></a><strong>Object API</strong></h4><p>Object.keys(obj); //获取obj的所有属性名称，返回数组</p><p>Object.values(obj); // 获取obj的所有属性值，返回数组</p><p>Object.defineProperty(obj, prop, option); //给obj设置属性</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">var obj = new Object();</span><br><span class="line">Object.defineProperty(obj, &#x27;name&#x27;, &#123;  </span><br><span class="line">    configurable: false, // 表示能否通过delete删除此属性  </span><br><span class="line">    writable: true, // 能否修改属性的值  </span><br><span class="line">    enumerable: true, // 表示该属性是否可枚举，即是否通过for-in循环或Object.keys()返回属性  </span><br><span class="line">    value: &#x27;张三&#x27;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">console.log(obj.name)</span><br></pre></td></tr></table></figure><p>Object.defineProperties(obj, props); // 一口气定义多个属性，原理和defineProperty一样</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">var obj = &#123;&#125;;</span><br><span class="line">Object.defineProperties(obj, &#123;  </span><br><span class="line">    &#x27;property1&#x27;: &#123;   </span><br><span class="line">          value: true,    </span><br><span class="line">          writable: true  </span><br><span class="line">      &#125;,  </span><br><span class="line">    &#x27;property2&#x27;: &#123;    </span><br><span class="line">          value: &#x27;Hello&#x27;,   </span><br><span class="line">          writable: false  </span><br><span class="line">     &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>今天的分享就是这些啦🤪，欢迎文章中指出任何有错误或不够清晰的表达，可以在下面评论区评论，也可以邮件至 <a href="mailto:&#x32;&#x33;&#x38;&#51;&#53;&#x31;&#54;&#54;&#x30;&#x36;&#x40;&#x71;&#113;&#46;&#x63;&#111;&#109;">&#x32;&#x33;&#x38;&#51;&#53;&#x31;&#54;&#54;&#x30;&#x36;&#x40;&#x71;&#113;&#46;&#x63;&#111;&#109;</a>.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在小程序开发过程中经常会遇到多级数据渲染，子父级数据嵌套问题，通常需要多层循环进行渲染数据，下面两张图说明一切👀&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20211022154440.png&quot;&gt;&lt;/p&gt;
</summary>
      
    
    
    
    
    <category term="渲染 小程序 JS基础" scheme="http://example.com/tags/%E6%B8%B2%E6%9F%93-%E5%B0%8F%E7%A8%8B%E5%BA%8F-JS%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2021/10/15/hello-world/"/>
    <id>http://example.com/2021/10/15/hello-world/</id>
    <published>2021-10-15T10:26:42.311Z</published>
    <updated>2021-10-15T10:26:42.311Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
